
/**
 * Functions to operate with russian font.
 */
//% weight=100 color=#12bcf1 icon="‚ô•"
namespace RussianFont {
     let letters = [" ", "0", "!", "4198532", ".", "4194304", ",", "4456448", "?", "4207150",
        "‚ô•", "4685802", "‚±Ω", "11417767", "ü¶â", "11417767", "‚ò∫", "15237440", "‚òª", "18284864",
        "–ê", "9747750", "–ë", "7642151", "–í", "7642407", "–ì", "1082415", "–î", "18852164",
        "–ï", "15768623", "–Å", "15768623", "–ñ", "22483413", "–ó", "7608583", "–ò", "18470705",
        "–ô", "18470709", "–ö", "9604265", "–õ", "18163844", "–ú", "18405233", "–ù", "9747753",
        "–û", "6595878", "–ü", "9741615", "–†", "1088807", "–°", "14713902", "–¢", "4329631",
        "–£", "1118545", "–§", "4675012", "–•", "18157905", "–¶", "17769769", "–ß", "8665385",
        "–®", "32167601", "–©", "17782449", "–™", "6625347", "–´", "20631089", "–¨", "6625346",
        "–≠", "7616775", "–Æ", "10149545", "–Ø", "18444892",
        "–∞", "9747750", "–±", "7642151", "–≤", "7642407", "–≥", "1082415", "–¥", "18852164",
        "–µ", "15768623", "—ë", "15768623", "–∂", "22483413", "–∑", "7608583", "–∏", "18470705",
        "–π", "18470709", "–∫", "9604265", "–ª", "18163844", "–º", "18405233", "–Ω", "9747753",
        "–æ", "6595878", "–ø", "9741615", "—Ä", "1088807", "—Å", "14713902", "—Ç", "4329631",
        "—É", "1118545", "—Ñ", "4675012", "—Ö", "18157905", "—Ü", "17769769", "—á", "8665385",
        "—à", "32167601", "—â", "17782449", "—ä", "6625347", "—ã", "20631089", "—å", "6625346",
        "—ç", "7616775", "—é", "10149545", "—è", "18444892",
        "A", "9747750", "B", "7642407", "C", "14713902", "E", "15768623", "H", "9747753", 
        "K", "9604265", "M", "18405233", "O", "6595878", "P", "1088807", "T", "4329631", 
        "X", "18157905",
        "a", "9747750", "b", "7642407", "c", "14713902", "e", "15768623", "h", "9747753",
        "k", "9604265", "m", "18405233", "o", "6595878", "p", "1088807", "t", "4329631",
        "x", "18157905"  ]

    /**
     * –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –±–∏—Ç–æ–≤—É—é –º–∞—Å–∫—É —Å –Ω—É–∂–Ω–æ–π —è—Ä–∫–æ—Å—Ç—å—é
     * @param mask –±–∏—Ç–æ–≤–∞—è –º–∞—Å–∫–∞
     * @param br —è—Ä–∫–æ—Å—Ç—å —Å–∏–º–≤–æ–ª–∞
     * @param back —è—Ä–∫–æ—Å—Ç—å —Ñ–æ–Ω–∞
     */
    //% block
    export function showSlide(mask: number, br: number, back: number): void {
        for (let i = 0; i <= 4; i++) {
            for (let j = 0; j <= 4; j++) {
                let k = 2 ** (i + j * 5)
                if ((mask & k) == k) {
                    led.plotBrightness(i, j, br)
                } else if (back >= 0) {
                    led.plotBrightness(i, j, back)
                }
            }
        }
    }

    /**
    * –ü–æ–ª—É—á–∏—Ç—å –±–∏—Ç–æ–≤—É—é –º–∞—Å–∫—É —Å–∏–º–≤–æ–ª–∞
    * @param —Å–∏–º–≤–æ–ª
    */
    //% block
    export function getLetterMask(letter: string): number {
        for (let l = 0; l <= letters.length / 2 - 1; l++) {
            if (letter == letters[l * 2]) {
                return parseFloat(letters[1 + l * 2])
            }
        }
        return 4207150; // "?"
    }

    /**
    * –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–∏–≥–∞—é—â—É—é —Å—Ç—Ä–æ–∫—É
    * @param message —Å—Ç—Ä–æ–∫–∞ —Å–∏–º–≤–æ–ª–æ–≤
    * @param tm —Å–∫–æ–ª—å–∫–æ –º—Å. –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –∫–∞–∂–¥—É—é –±—É–∫–≤—É
    */
    //% block
    export function showMessage(message: string, tm: number): void {
        if (tm <= 10) {
            tm = 10
        }
        for (let index = 0; index <= message.length - 1; index++) {
            let mask = getLetterMask(message.charAt(index))
            blinkLetter(mask, tm)
            basic.pause(0.5 * tm)
        }
    }

    function blinkLetter(mask: number, tm: number) {
        for (let i1 = 0; i1 <= 26; i1++) {
            showSlide(mask, i1 * 8 + 10, 0)
            basic.pause(0.1 * tm)
        }
        for (let i12 = 0; i12 <= 26; i12++) {
            showSlide(mask, 255 - i12 * 8, 0)
            basic.pause(0.4 * tm)
        }
        showSlide(mask, 0, 0)
    }

    /**
    * –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–∏–≥–∞—é—â—É—é —Å—Ç—Ä–æ–∫—É
    * @param message —Å—Ç—Ä–æ–∫–∞ —Å–∏–º–≤–æ–ª–æ–≤
    * @param tm —Å–∫–æ–ª—å–∫–æ –º—Å. –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –∫–∞–∂–¥—É—é –±—É–∫–≤—É
    */
    //% block
    export function showMessageShadow(message: string, tm: number): void {
        if (tm <= 10) {
            tm = 10
        }
        message = message + " "
        let lastMask = 0
        for (let index = 0; index <= message.length - 1; index++) {
            let mask = getLetterMask(message.charAt(index))
            let shadow = lastMask & (~mask)
            for (let i1 = 0; i1 <= 26; i1++) {
                showSlide(lastMask, 255 - i1 * 8 - 10, -1)
                showSlide(mask, i1 * 8 + 10, -1)
//                basic.pause(0.1 * tm)
            }
            basic.pause(0.5 * tm)
            lastMask = mask
        }
    }
}
